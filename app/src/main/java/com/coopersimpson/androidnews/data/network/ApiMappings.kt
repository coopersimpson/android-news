package com.coopersimpson.androidnews.data.network

object ApiMappings {

    val countryMap = mapOf(
        "United States" to "us",
        "United States of America" to "us",
        "United Kingdom" to "gb",
        "United Arab Emirates" to "ae",
        "Afghanistan" to "af",
        "Albania" to "al",
        "Algeria" to "dz",
        "American Samoa" to "as",
        "Andorra" to "ad",
        "Angola" to "ao",
        "Anguilla" to "ai",
        "Antarctica" to "aq",
        "Antigua and Barbuda" to "ag",
        "Argentina" to "ar",
        "Armenia" to "am",
        "Aruba" to "aw",
        "Australia" to "au",
        "Austria" to "at",
        "Azerbaijan" to "az",
        "Bahamas" to "bs",
        "Bahrain" to "bh",
        "Bangladesh" to "bd",
        "Barbados" to "bb",
        "Belarus" to "by",
        "Belgium" to "be",
        "Belize" to "bz",
        "Benin" to "bj",
        "Bermuda" to "bm",
        "Bhutan" to "bt",
        "Bolivia" to "bo",
        "Bosnia and Herzegovina" to "ba",
        "Botswana" to "bw",
        "Brazil" to "br",
        "Brunei" to "bn",
        "Bulgaria" to "bg",
        "Burkina Faso" to "bf",
        "Burundi" to "bi",
        "Cambodia" to "kh",
        "Cameroon" to "cm",
        "Canada" to "ca",
        "Cape Verde" to "cv",
        "Cayman Islands" to "ky",
        "Central African Republic" to "cf",
        "Chad" to "td",
        "Chile" to "cl",
        "China" to "cn",
        "Colombia" to "co",
        "Comoros" to "km",
        "Congo" to "cg",
        "DR Congo" to "cd",
        "Ivory Coast" to "ci",
        "Côte d'Ivoire" to "ci",
        "Croatia" to "hr",
        "Cuba" to "cu",
        "Cyprus" to "cy",
        "Czech Republic" to "cz",
        "Denmark" to "dk",
        "Djibouti" to "dj",
        "Dominica" to "dm",
        "Dominican Republic" to "do",
        "Ecuador" to "ec",
        "Egypt" to "eg",
        "El Salvador" to "sv",
        "Estonia" to "ee",
        "Ethiopia" to "et",
        "Fiji" to "fj",
        "Finland" to "fi",
        "France" to "fr",
        "Germany" to "de",
        "Greece" to "gr",
        "Greenland" to "gl",
        "Grenada" to "gd",
        "Guam" to "gu",
        "Guatemala" to "gt",
        "Guinea" to "gn",
        "Guinea-Bissau" to "gw",
        "Guyana" to "gy",
        "Haiti" to "ht",
        "Honduras" to "hn",
        "Hong Kong" to "hk",
        "Hungary" to "hu",
        "Iceland" to "is",
        "India" to "in",
        "Indonesia" to "id",
        "Iran" to "ir",
        "Iraq" to "iq",
        "Ireland" to "ie",
        "Israel" to "il",
        "Italy" to "it",
        "Jamaica" to "jm",
        "Japan" to "jp",
        "Jordan" to "jo",
        "Kazakhstan" to "kz",
        "Kenya" to "ke",
        "Kuwait" to "kw",
        "Kyrgyzstan" to "kg",
        "Laos" to "la",
        "Latvia" to "lv",
        "Lebanon" to "lb",
        "Lesotho" to "ls",
        "Liberia" to "lr",
        "Libya" to "ly",
        "Lithuania" to "lt",
        "Luxembourg" to "lu",
        "Macau" to "mo",
        "North Macedonia" to "mk",
        "Madagascar" to "mg",
        "Malawi" to "mw",
        "Malaysia" to "my",
        "Maldives" to "mv",
        "Mali" to "ml",
        "Malta" to "mt",
        "Mauritius" to "mu",
        "Mexico" to "mx",
        "Moldova" to "md",
        "Monaco" to "mc",
        "Mongolia" to "mn",
        "Montenegro" to "me",
        "Morocco" to "ma",
        "Mozambique" to "mz",
        "Myanmar" to "mm",
        "Namibia" to "na",
        "Nepal" to "np",
        "Netherlands" to "nl",
        "New Zealand" to "nz",
        "Nicaragua" to "ni",
        "Niger" to "ne",
        "Nigeria" to "ng",
        "Norway" to "no",
        "Oman" to "om",
        "Pakistan" to "pk",
        "Palestine" to "ps",
        "Panama" to "pa",
        "Papua New Guinea" to "pg",
        "Paraguay" to "py",
        "Peru" to "pe",
        "Philippines" to "ph",
        "Poland" to "pl",
        "Portugal" to "pt",
        "Puerto Rico" to "pr",
        "Qatar" to "qa",
        "Romania" to "ro",
        "Russia" to "ru",
        "Rwanda" to "rw",
        "Saudi Arabia" to "sa",
        "Senegal" to "sn",
        "Serbia" to "rs",
        "Singapore" to "sg",
        "Slovakia" to "sk",
        "Slovenia" to "si",
        "South Africa" to "za",
        "South Korea" to "kr",
        "Spain" to "es",
        "Sri Lanka" to "lk",
        "Sudan" to "sd",
        "Sweden" to "se",
        "Switzerland" to "ch",
        "Syria" to "sy",
        "Taiwan" to "tw",
        "Tajikistan" to "tj",
        "Tanzania" to "tz",
        "Thailand" to "th",
        "Trinidad and Tobago" to "tt",
        "Tunisia" to "tn",
        "Turkey" to "tr",
        "Turkmenistan" to "tm",
        "Uganda" to "ug",
        "Ukraine" to "ua",
        "United States Virgin Islands" to "vi",
        "Uruguay" to "uy",
        "Uzbekistan" to "uz",
        "Vanuatu" to "vu",
        "Venezuela" to "ve",
        "Vietnam" to "vn",
        "Yemen" to "ye",
        "Zambia" to "zm",
        "Zimbabwe" to "zw",
        "World" to "wo"
    )

    val countryLabels: List<String> = listOf("Any") + countryMap.keys.toList()
    // Map label to code "Australia -> au"
    fun countryCode(label: String): String? =
        if (label == "Any") null else countryMap[label]
    // Reverse map "au -> Australia"
    fun countryLabel(code: String?): String =
        when {
            code == null -> "Any"
            else -> countryMap.entries.find { it.value == code }?.key ?: code
        }

    val languageMap = mapOf(
        "English" to "en",
        "Mandarin" to "zh",
        "Japanese" to "jp",
        "Korean" to "ko",
        "Afrikaans" to "af",
        "Albanian" to "sq",
        "Amharic" to "am",
        "Arabic" to "ar",
        "Armenian" to "hy",
        "Assamese" to "as",
        "Azerbaijani" to "az",
        "Basque" to "eu",
        "Belarusian" to "be",
        "Bengali" to "bn",
        "Bosnian" to "bs",
        "Bulgarian" to "bg",
        "Burmese" to "my",
        "Catalan" to "ca",
        "Central Kurdish" to "ckb",
        "Croatian" to "hr",
        "Czech" to "cs",
        "Danish" to "da",
        "Dutch" to "nl",
        "Estonian" to "et",
        "Filipino" to "pi",
        "Finnish" to "fi",
        "French" to "fr",
        "Georgian" to "ka",
        "German" to "de",
        "Greek" to "el",
        "Gujarati" to "gu",
        "Hebrew" to "he",
        "Hindi" to "hi",
        "Hungarian" to "hu",
        "Icelandic" to "is",
        "Indonesian" to "id",
        "Italian" to "it",
        "Kannada" to "kn",
        "Kazakh" to "kz",
        "Khmer" to "kh",
        "Kinyarwanda" to "rw",
        "Kurdish" to "ku",
        "Latvian" to "lv",
        "Lithuanian" to "lt",
        "Luxembourgish" to "lb",
        "Macedonian" to "mk",
        "Malay" to "ms",
        "Malayalam" to "ml",
        "Maltese" to "mt",
        "Maori" to "mi",
        "Marathi" to "mr",
        "Mongolian" to "mn",
        "Nepali" to "ne",
        "Norwegian" to "no",
        "Pashto" to "ps",
        "Persian" to "fa",
        "Polish" to "pl",
        "Portuguese" to "pt",
        "Punjabi" to "pa",
        "Romanian" to "ro",
        "Russian" to "ru",
        "Serbian" to "sr",
        "Shona" to "sn",
        "Sindhi" to "sd",
        "Sinhala" to "si",
        "Slovak" to "sk",
        "Slovenian" to "sl",
        "Somali" to "so",
        "Spanish" to "es",
        "Swahili" to "sw",
        "Swedish" to "sv",
        "Tamil" to "ta",
        "Telugu" to "te",
        "Thai" to "th",
        "Traditional Chinese" to "zht",
        "Turkish" to "tr",
        "Turkmen" to "tk",
        "Ukrainian" to "uk",
        "Urdu" to "ur",
        "Uzbek" to "uz",
        "Vietnamese" to "vi",
        "Welsh" to "cy",
        "Zulu" to "zu"
    )

    val languageLabels: List<String> = languageMap.keys.toList()
    fun languageCode(label: String): String? =
        languageMap[label]
    fun languageLabel(code: String?): String =
        when {
            code == null -> "-"
            else -> languageMap.entries.find { it.value == code }?.key ?: code
        }

    val categoryMap = mapOf(
        "Business" to "business",
        "Crime" to "crime",
        "Domestic" to "domestic",
        "Education" to "education",
        "Entertainment" to "entertainment",
        "Environment" to "environment",
        "Food" to "food",
        "Health" to "health",
        "Lifestyle" to "lifestyle",
        "Politics" to "politics",
        "Science" to "science",
        "Sports" to "sports",
        "Technology" to "technology",
        "Top" to "top",
        "Tourism" to "tourism",
        "World" to "world",
        "Other" to "other"
    )

    val categoryLabels: List<String> = listOf("All") + categoryMap.keys.toList()
    fun categoryCode(label: String): String? =
        if (label == "All") null else categoryMap[label]

    val countryEmojiMap = mapOf(
        "united states" to "🇺🇸",
        "united states of america" to "🇺🇸",
        "united kingdom" to "🇬🇧",
        "united arab emirates" to "🇦🇪",
        "afghanistan" to "🇦🇫",
        "albania" to "🇦🇱",
        "algeria" to "🇩🇿",
        "american samoa" to "🇦🇸",
        "andorra" to "🇦🇩",
        "angola" to "🇦🇴",
        "anguilla" to "🇦🇮",
        "antarctica" to "🇦🇶",
        "antigua and barbuda" to "🇦🇬",
        "argentina" to "🇦🇷",
        "armenia" to "🇦🇲",
        "aruba" to "🇦🇼",
        "australia" to "🇦🇺",
        "austria" to "🇦🇹",
        "azerbaijan" to "🇦🇿",
        "bahamas" to "🇧🇸",
        "bahrain" to "🇧🇭",
        "bangladesh" to "🇧🇩",
        "barbados" to "🇧🇧",
        "belarus" to "🇧🇾",
        "belgium" to "🇧🇪",
        "belize" to "🇧🇿",
        "benin" to "🇧🇯",
        "bermuda" to "🇧🇲",
        "bhutan" to "🇧🇹",
        "bolivia" to "🇧🇴",
        "bosnia and herzegovina" to "🇧🇦",
        "botswana" to "🇧🇼",
        "brazil" to "🇧🇷",
        "brunei" to "🇧🇳",
        "bulgaria" to "🇧🇬",
        "burkina faso" to "🇧🇫",
        "burundi" to "🇧🇮",
        "cambodia" to "🇰🇭",
        "cameroon" to "🇨🇲",
        "canada" to "🇨🇦",
        "cape verde" to "🇨🇻",
        "cayman islands" to "🇰🇾",
        "central african republic" to "🇨🇫",
        "chad" to "🇹🇩",
        "chile" to "🇨🇱",
        "china" to "🇨🇳",
        "colombia" to "🇨🇴",
        "comoros" to "🇰🇲",
        "congo" to "🇨🇬",
        "dr congo" to "🇨🇩",
        "ivory coast" to "🇨🇮",
        "côte d'ivoire" to "🇨🇮",
        "croatia" to "🇭🇷",
        "cuba" to "🇨🇺",
        "cyprus" to "🇨🇾",
        "czech republic" to "🇨🇿",
        "denmark" to "🇩🇰",
        "djibouti" to "🇩🇯",
        "dominica" to "🇩🇲",
        "dominican republic" to "🇩🇴",
        "ecuador" to "🇪🇨",
        "egypt" to "🇪🇬",
        "el salvador" to "🇸🇻",
        "estonia" to "🇪🇪",
        "ethiopia" to "🇪🇹",
        "fiji" to "🇫🇯",
        "finland" to "🇫🇮",
        "france" to "🇫🇷",
        "germany" to "🇩🇪",
        "greece" to "🇬🇷",
        "greenland" to "🇬🇱",
        "grenada" to "🇬🇩",
        "guam" to "🇬🇺",
        "guatemala" to "🇬🇹",
        "guinea" to "🇬🇳",
        "guinea-bissau" to "🇬🇼",
        "guyana" to "🇬🇾",
        "haiti" to "🇭🇹",
        "honduras" to "🇭🇳",
        "hong kong" to "🇭🇰",
        "hungary" to "🇭🇺",
        "iceland" to "🇮🇸",
        "india" to "🇮🇳",
        "indonesia" to "🇮🇩",
        "iran" to "🇮🇷",
        "iraq" to "🇮🇶",
        "ireland" to "🇮🇪",
        "israel" to "🇮🇱",
        "italy" to "🇮🇹",
        "jamaica" to "🇯🇲",
        "japan" to "🇯🇵",
        "jordan" to "🇯🇴",
        "kazakhstan" to "🇰🇿",
        "kenya" to "🇰🇪",
        "kuwait" to "🇰🇼",
        "kyrgyzstan" to "🇰🇬",
        "laos" to "🇱🇦",
        "latvia" to "🇱🇻",
        "lebanon" to "🇱🇧",
        "lesotho" to "🇱🇸",
        "liberia" to "🇱🇷",
        "libya" to "🇱🇾",
        "lithuania" to "🇱🇹",
        "luxembourg" to "🇱🇺",
        "macau" to "🇲🇴",
        "north macedonia" to "🇲🇰",
        "madagascar" to "🇲🇬",
        "malawi" to "🇲🇼",
        "malaysia" to "🇲🇾",
        "maldives" to "🇲🇻",
        "mali" to "🇲🇱",
        "malta" to "🇲🇹",
        "mauritius" to "🇲🇺",
        "mexico" to "🇲🇽",
        "moldova" to "🇲🇩",
        "monaco" to "🇲🇨",
        "mongolia" to "🇲🇳",
        "montenegro" to "🇲🇪",
        "morocco" to "🇲🇦",
        "mozambique" to "🇲🇿",
        "myanmar" to "🇲🇲",
        "namibia" to "🇳🇦",
        "nepal" to "🇳🇵",
        "netherlands" to "🇳🇱",
        "new zealand" to "🇳🇿",
        "nicaragua" to "🇳🇮",
        "niger" to "🇳🇪",
        "nigeria" to "🇳🇬",
        "norway" to "🇳🇴",
        "oman" to "🇴🇲",
        "pakistan" to "🇵🇰",
        "palestine" to "🇵🇸",
        "panama" to "🇵🇦",
        "papua new guinea" to "🇵🇬",
        "paraguay" to "🇵🇾",
        "peru" to "🇵🇪",
        "philippines" to "🇵🇭",
        "poland" to "🇵🇱",
        "portugal" to "🇵🇹",
        "puerto rico" to "🇵🇷",
        "qatar" to "🇶🇦",
        "romania" to "🇷🇴",
        "russia" to "🇷🇺",
        "rwanda" to "🇷🇼",
        "saudi arabia" to "🇸🇦",
        "senegal" to "🇸🇳",
        "serbia" to "🇷🇸",
        "singapore" to "🇸🇬",
        "slovakia" to "🇸🇰",
        "slovenia" to "🇸🇮",
        "south africa" to "🇿🇦",
        "south korea" to "🇰🇷",
        "spain" to "🇪🇸",
        "sri lanka" to "🇱🇰",
        "sudan" to "🇸🇩",
        "sweden" to "🇸🇪",
        "switzerland" to "🇨🇭",
        "syria" to "🇸🇾",
        "taiwan" to "🇹🇼",
        "tajikistan" to "🇹🇯",
        "tanzania" to "🇹🇿",
        "thailand" to "🇹🇭",
        "trinidad and tobago" to "🇹🇹",
        "tunisia" to "🇹🇳",
        "turkey" to "🇹🇷",
        "turkmenistan" to "🇹🇲",
        "uganda" to "🇺🇬",
        "ukraine" to "🇺🇦",
        "united states virgin islands" to "🇻🇮",
        "uruguay" to "🇺🇾",
        "uzbekistan" to "🇺🇿",
        "vanuatu" to "🇻🇺",
        "venezuela" to "🇻🇪",
        "vietnam" to "🇻🇳",
        "yemen" to "🇾🇪",
        "zambia" to "🇿🇲",
        "zimbabwe" to "🇿🇼",
        "world" to "🌍"
    )

    fun countryEmoji(name: String?): String =
        name
            ?.trim()
            ?.lowercase()
            ?.let { countryEmojiMap[it] }
            ?: "🌍" // fallback to world if country not found in map
    fun categoryLabel(code: String?): String =
        when {
            code == null -> "All"
            else -> categoryMap.entries.find { it.value == code }?.key ?: code
        }
}